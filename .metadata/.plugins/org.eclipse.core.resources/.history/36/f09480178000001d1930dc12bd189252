package com.api.parkingcontrol.controllers;

import java.time.LocalDateTime;
import java.time.ZoneId;

import javax.validation.Valid;

import org.springframework.beans.BeanUtils;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.api.parkingcontrol.dtos.ParkingSpotDTO;
import com.api.parkingcontrol.models.ParkinSpotModel;
import com.api.parkingcontrol.services.ParkingSpotService;

@RestController
@CrossOrigin(origins = "*", maxAge=3600)
@RequestMapping("/parking-spot")
public class ParkingSpotController 
{
	final ParkingSpotService parkingSporService;

	public ParkingSpotController(ParkingSpotService parkingSporService) {
		this.parkingSporService = parkingSporService;
	} 
	
	@PostMapping
	public ResponseEntity<Object> saveParkingSpot(@RequestBody @Valid ParkingSpotDTO parkingSpotDto)
	{
		
		if(parkingSporService.existsByLicensePlateCar(parkingSpotDto.getLicensePlateCar()))
		{
			return ResponseEntity.status(HttpStatus.CONFLICT).body("Conflict");
		}
		if(parkingSporService.existsByParkingSpotNumber(parkingSpotDto.getParkingSpotNumber()))
		{
			return ResponseEntity.status(HttpStatus.CONFLICT).body("Conflict");
		}
		if(parkingSporService.existsByApartmentAndBlock(parkingSpotDto.getApartment(),parkingSpotDto.getBlock())) 
		{
			return ResponseEntity.status(HttpStatus.CONFLICT).body("Conflict");
		}
		
		var parkingSpotModel = new ParkinSpotModel();
		
		BeanUtils.copyProperties(parkingSpotDto, parkingSpotModel);
		
		parkingSpotModel.setRegistrationDate(LocalDateTime.now(ZoneId.of("UTC")));
		ResponseEntity.status(HttpStatus.OK).body(logRepository.listarLogs())
		return ResponseEntity.status(HttpStatus.CREATED).body(parkingSporService.save(parkingSpotModel));
	}
}
